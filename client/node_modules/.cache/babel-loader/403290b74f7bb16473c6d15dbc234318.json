{"ast":null,"code":"import _regeneratorRuntime from\"/Users/deeptanshusankhwar/Documents/templates/hackquarantine/TravelBand/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/deeptanshusankhwar/Documents/templates/hackquarantine/TravelBand/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _createForOfIteratorHelper from\"/Users/deeptanshusankhwar/Documents/templates/hackquarantine/TravelBand/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _classCallCheck from\"/Users/deeptanshusankhwar/Documents/templates/hackquarantine/TravelBand/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/deeptanshusankhwar/Documents/templates/hackquarantine/TravelBand/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _createSuper from\"/Users/deeptanshusankhwar/Documents/templates/hackquarantine/TravelBand/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/Users/deeptanshusankhwar/Documents/templates/hackquarantine/TravelBand/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import\"./App.css\";import MIDISounds from'midi-sounds-react';import KeyboardEventHandler from'react-keyboard-event-handler';import{socket}from'./index';function home(){window.location.reload();}var Guitar=/*#__PURE__*/function(_Component){_inherits(Guitar,_Component);var _super=_createSuper(Guitar);function Guitar(){var _this;_classCallCheck(this,Guitar);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.shiftKey=0;_this.chords=0;_this.base=60;_this.strum=false;_this.state={recordStatus:false,recordTune:{beatPlayed:[],timePlayed:[]}};_this.mapping=[['a',45],['b',47],['c',48],['d',50],['e',52],['f',53],['g',55]];return _this;}_createClass(Guitar,[{key:\"playTune\",value:function playTune(selectedNote){this.midiSounds.playChordNow(258,selectedNote,1.5);}},{key:\"playNote\",value:function playNote(key,shiftKey,chords){var selectedNote=[];var _iterator=_createForOfIteratorHelper(this.mapping),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var map=_step.value;if(shiftKey===0){if(chords===0){if(key===map[0]){if(this.strum){selectedNote=[map[1],map[1]+7,map[1]+12,map[1]+16,map[1]+19];}else{selectedNote=[map[1],map[1]+7,map[1]+12];}return selectedNote;}}if(chords===1){if(key===map[0]){if(this.strum){selectedNote=[map[1],map[1]+7,map[1]+12,map[1]+15,map[1]+19];}else{selectedNote=[map[1],map[1]+7,map[1]+12];}return selectedNote;}}}if(shiftKey===1){this.base=map[1]+1;if(chords===0){if(key===map[0]){if(this.strum){selectedNote=[this.base,this.base+7,this.base+12,this.base+16,this.base+19];}else{selectedNote=[this.base,this.base+7,this.base+12];}return selectedNote;}}if(chords===1){if(key===map[0]){if(this.strum){selectedNote=[this.base,this.base+7,this.base+12,this.base+16,this.base+19];}else{selectedNote=[this.base,this.base+7,this.base+12];}return selectedNote;}}}}// for record function, copied from drum.js\n}catch(err){_iterator.e(err);}finally{_iterator.f();}if(this.state.recordStatus){this.state.recordTune.beatPlayed.push(selectedNote);this.state.recordTune.timePlayed.push(new Date());console.log(this.state.recordTune);}return[];}//send notes from guitar to server\n},{key:\"sendKeysFromGuitar\",value:function sendKeysFromGuitar(selectedNote){socket.emit('sendFromGuitar',selectedNote);}},{key:\"playGuitar\",value:function playGuitar(key){if(key==='shift'){this.shiftKey=(this.shiftKey+1)%2;}if(key==='m'){this.chords=(this.chords+1)%2;}this.strum=!this.strum;this.setState({});var selectedNote=this.playNote(key,this.shiftKey,this.chords);if(selectedNote.length!=0){this.sendKeysFromGuitar(selectedNote);this.playTune(selectedNote);}}//////////////JUST COPIED PASTED RECORD CODE FROM DRUM.JS//////////////////////////\n//flip record status from recording to not recording and vice versa\n},{key:\"toggleRecordStatus\",value:function toggleRecordStatus(){this.state.recordStatus=!this.state.recordStatus;if(this.state.recordStatus){document.getElementById('record-btn').innerHTML='Stop';console.log(this.state.recordStatus);}else{document.getElementById('record-btn').innerHTML='Record';document.getElementById('play-btn').disabled=false;}}//asynchronous function that plays the recorded beats at an interval of 1 second each\n},{key:\"wait\",value:function(){var _wait=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(ms){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:return _context.abrupt(\"return\",new Promise(function(resolve){setTimeout(resolve,ms);}));case 1:case\"end\":return _context.stop();}}},_callee);}));function wait(_x){return _wait.apply(this,arguments);}return wait;}()},{key:\"playRecord\",value:function(){var _playRecord=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var i;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:console.log('playing');i=0;case 2:if(!(i<this.state.recordTune.beatPlayed.length)){_context2.next=11;break;}_context2.next=5;return this.midiSounds.playChordNow(258,this.state.recordTune.beatPlayed[i],1.5);case 5:console.log(i);_context2.next=8;return this.wait(this.state.recordTune.timePlayed[i+1]-this.state.recordTune.timePlayed[i]);case 8:i++;_context2.next=2;break;case 11:case\"end\":return _context2.stop();}}},_callee2,this);}));function playRecord(){return _playRecord.apply(this,arguments);}return playRecord;}()//delete the previously recorded beats to start recording again from scratch\n},{key:\"resetRecord\",value:function resetRecord(){this.setState({recordTune:{beatPlayed:[],timePlayed:[]}});}//////////////////COPY OF RECORD CODE ENDS HERE////////////////////////////////////////////\n},{key:\"render\",value:function render(){var _this2=this;//send drum beats played\nsocket.on('receiveFromDrums',function(key){_this2.midiSounds.playDrumsNow(key);});//send piano played\nsocket.on('receiveFromPiano',function(sound){_this2.midiSounds.playChordNow(3,sound.note,sound.length);});//send guitar played from other users\nsocket.on('receiveFromGuitar',function(selectedNote){_this2.midiSounds.playChordNow(258,selectedNote,1.5);});return/*#__PURE__*/React.createElement(\"div\",{className:\"App\"},/*#__PURE__*/React.createElement(\"header\",{id:\"main-header\"},/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},/*#__PURE__*/React.createElement(\"h1\",{contentEditable:true},\"Travel Ban\",/*#__PURE__*/React.createElement(\"span\",{style:{color:'#9a0415'}},\"d\")))),/*#__PURE__*/React.createElement(\"nav\",{id:\"navbar\"},/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},/*#__PURE__*/React.createElement(\"ul\",null,/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(\"a\",{onClick:home},\"Home\")),/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(\"a\",{id:\"record-btn\",onClick:this.toggleRecordStatus.bind(this)},\"Record\")),/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(\"a\",{id:\"play-btn\",onClick:this.playRecord.bind(this)},\"Play\")),/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(\"a\",{onClick:this.resetRecord.bind(this)},\"Reset\"))))),/*#__PURE__*/React.createElement(\"p\",{className:\"App-intro\"},\"Press the letter of the chord you want to play ('a' = A major).\"),/*#__PURE__*/React.createElement(KeyboardEventHandler,{handleKeys:['all'],onKeyEvent:function onKeyEvent(key,e){return _this2.playGuitar(key);}}),/*#__PURE__*/React.createElement(\"p\",null,\"Click play only after you stop recording!\"),/*#__PURE__*/React.createElement(\"div\",{className:\"image\"}),/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"h3\",null,\"Press shift to change between natural chords and sharp/flats.\")),/*#__PURE__*/React.createElement(\"p\",null,\"Current chord type: \",this.shiftKey===0?\"Natural\":\"Sharp/Flat\"),/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"h3\",null,\"Press m to toggle between major and minor chords.\")),/*#__PURE__*/React.createElement(\"p\",null,\"Current chord setting: \",this.chords===0?\"Major\":\"Minor\"),/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"h3\",null,\"Hit Refresh to change instrument\")),/*#__PURE__*/React.createElement(MIDISounds,{ref:function ref(_ref){return _this2.midiSounds=_ref;},appElementName:\"root\",instruments:[258,3]}));}}]);return Guitar;}(Component);export default Guitar;","map":{"version":3,"sources":["/Users/deeptanshusankhwar/Documents/templates/hackquarantine/TravelBand/client/src/guitar.js"],"names":["React","Component","MIDISounds","KeyboardEventHandler","socket","home","window","location","reload","Guitar","shiftKey","chords","base","strum","state","recordStatus","recordTune","beatPlayed","timePlayed","mapping","selectedNote","midiSounds","playChordNow","key","map","push","Date","console","log","emit","setState","playNote","length","sendKeysFromGuitar","playTune","document","getElementById","innerHTML","disabled","ms","Promise","resolve","setTimeout","i","wait","on","playDrumsNow","sound","note","color","toggleRecordStatus","bind","playRecord","resetRecord","e","playGuitar","ref"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport \"./App.css\";\nimport MIDISounds from 'midi-sounds-react';\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\nimport {socket} from './index';\n\nfunction home(){\n    window.location.reload();\n}\n\n\nclass Guitar extends Component {\n    //to track the status of recording\n    shiftKey = 0;\n    chords = 0;\n    base = 60;\n    strum = false;\n\n    state = {\n        recordStatus: false,\n        recordTune: {\n            beatPlayed : [],\n            timePlayed : []\n        }\n    };\n\n    mapping = [\n        ['a', 45],\n        ['b', 47],\n        ['c', 48],\n        ['d', 50],\n        ['e', 52],\n        ['f', 53],\n        ['g', 55],\n    ];\n\n    playTune(selectedNote)    {\n        this.midiSounds.playChordNow(258, selectedNote, 1.5);\n    }\n\n    playNote(key, shiftKey, chords) {\n        let selectedNote = [];\n        for (const map of this.mapping) {\n\n            if (shiftKey === 0) {\n                if (chords === 0) {\n                    if (key === map[0]) {\n                        if (this.strum) {\n                            selectedNote = [map[1], map[1] + 7, map[1] + 12, map[1] + 16, map[1] + 19];\n                        }\n                        else{\n                            selectedNote = [map[1], map[1] + 7, map[1] + 12];\n                        }\n                        return selectedNote;\n                    }\n                }\n                if (chords === 1) {\n                    if (key === map[0]) {\n                        if (this.strum){\n                            selectedNote = [map[1], map[1] + 7, map[1] + 12, map[1] + 15, map[1] + 19];\n                        }\n                        else{\n                            selectedNote = [map[1], map[1] + 7, map[1] + 12];\n                        }\n                        return selectedNote;\n                    }\n                }\n            }\n            if (shiftKey === 1) {\n                this.base = map[1] + 1;\n                if (chords === 0) {\n                    if (key === map[0]) {\n                        if (this.strum) {\n                            selectedNote = [this.base, this.base + 7, this.base + 12, this.base + 16, this.base + 19];\n                        }\n                        else{\n                            selectedNote = [this.base, this.base + 7, this.base + 12];\n                        }\n                        return selectedNote;\n\n                    }\n                }\n                if (chords === 1) {\n                    if (key === map[0]) {\n                        if (this.strum) {\n                            selectedNote = [this.base, this.base + 7, this.base + 12, this.base + 16, this.base + 19];\n                        }\n                        else{\n                            selectedNote = [this.base, this.base + 7, this.base + 12];\n                        }\n                        return selectedNote;\n\n                    }\n                }\n            }\n        }\n\n        // for record function, copied from drum.js\n        if (this.state.recordStatus)  {\n            this.state.recordTune.beatPlayed.push(selectedNote);\n            this.state.recordTune.timePlayed.push(new Date())\n            console.log(this.state.recordTune);\n        }\n        return [];\n    }\n\n    //send notes from guitar to server\n    sendKeysFromGuitar(selectedNote)  {\n        socket.emit('sendFromGuitar', selectedNote);\n    }\n\n\n\n    playGuitar(key){\n        if (key === 'shift') {\n            this.shiftKey = (this.shiftKey + 1) % 2\n        }\n\n        if (key === 'm') {\n            this.chords = (this.chords + 1) % 2\n        }\n\n        this.strum = !this.strum;\n\n        this.setState({});\n\n\n        const selectedNote = this.playNote(key, this.shiftKey, this.chords);\n        if (selectedNote.length != 0)   {\n            this.sendKeysFromGuitar(selectedNote);\n            this.playTune(selectedNote);\n        }\n    }\n\n    //////////////JUST COPIED PASTED RECORD CODE FROM DRUM.JS//////////////////////////\n    //flip record status from recording to not recording and vice versa\n    toggleRecordStatus()  {\n        this.state.recordStatus = !this.state.recordStatus;\n        if (this.state.recordStatus) {\n            document.getElementById('record-btn').innerHTML = 'Stop';\n            console.log(this.state.recordStatus)\n        }\n        else{\n            document.getElementById('record-btn').innerHTML = 'Record';\n            document.getElementById('play-btn').disabled = false;\n        }\n    }\n\n    //asynchronous function that plays the recorded beats at an interval of 1 second each\n    async wait(ms) {\n        return new Promise(resolve => {\n            setTimeout(resolve, ms);\n        });\n    }\n    async playRecord() {\n        console.log('playing');\n        for (let i = 0; i < this.state.recordTune.beatPlayed.length; i++) {\n            await this.midiSounds.playChordNow(258, this.state.recordTune.beatPlayed[i], 1.5);\n            console.log(i);\n            await this.wait(this.state.recordTune.timePlayed[i+1] - this.state.recordTune.timePlayed[i]);\n        }\n    }\n\n\n    //delete the previously recorded beats to start recording again from scratch\n    resetRecord(){\n        this.setState({ recordTune: {\n            beatPlayed: [],\n            timePlayed: []\n          }\n        });\n    }\n    //////////////////COPY OF RECORD CODE ENDS HERE////////////////////////////////////////////\n\n\n    render(){\n        //send drum beats played\n        socket.on('receiveFromDrums', (key) => {\n            this.midiSounds.playDrumsNow(key);\n        });\n\n        //send piano played\n        socket.on('receiveFromPiano', (sound) => {\n            this.midiSounds.playChordNow(3, sound.note, sound.length);\n        });\n\n        //send guitar played from other users\n        socket.on('receiveFromGuitar', (selectedNote) => {\n          this.midiSounds.playChordNow(258, selectedNote, 1.5);\n        });\n\n        return(\n            <div className=\"App\">\n                <header id = 'main-header'>\n                    <div className=\"container\">\n                        <h1 contentEditable>Travel Ban<span style={{color: '#9a0415'}}>d</span></h1>\n                    </div>\n                </header>\n                <nav id=\"navbar\">\n                    <div className=\"container\">\n                        <ul>\n                            <li><a onClick={home}>Home</a></li>\n                            <li><a id=\"record-btn\" onClick={this.toggleRecordStatus.bind(this)}>Record</a></li>\n                            <li><a id=\"play-btn\" onClick={this.playRecord.bind(this)}>Play</a></li>\n                            <li><a onClick={this.resetRecord.bind(this)}>Reset</a></li>\n                        </ul>\n                    </div>\n                </nav>\n                <p className=\"App-intro\">Press the letter of the chord you want to play ('a' = A major).</p>\n                <KeyboardEventHandler handleKeys={['all']} onKeyEvent={(key, e) => this.playGuitar(key)}/>\n                <p>Click play only after you stop recording!</p>\n                <div className='image'></div>\n                <p><h3>Press shift to change between natural chords and sharp/flats.</h3></p>\n                <p>Current chord type: {this.shiftKey === 0 ? \"Natural\" : \"Sharp/Flat\"}</p>\n                <p><h3>Press m to toggle between major and minor chords.</h3></p>\n                <p>Current chord setting: {this.chords === 0 ? \"Major\" : \"Minor\"}</p>\n                <p><h3>Hit Refresh to change instrument</h3></p>\n\n                <MIDISounds ref={(ref) => (this.midiSounds = ref)} appElementName=\"root\" instruments={[258, 3]}/>\n            </div>\n        )\n    }\n}\n\nexport default Guitar;\n"]},"metadata":{},"sourceType":"module"}