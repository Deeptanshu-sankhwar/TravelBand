{"ast":null,"code":"import _regeneratorRuntime from\"/Users/deeptanshusankhwar/Documents/templates/hackquarantine/TravelBand/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/deeptanshusankhwar/Documents/templates/hackquarantine/TravelBand/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/deeptanshusankhwar/Documents/templates/hackquarantine/TravelBand/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/deeptanshusankhwar/Documents/templates/hackquarantine/TravelBand/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _createSuper from\"/Users/deeptanshusankhwar/Documents/templates/hackquarantine/TravelBand/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/Users/deeptanshusankhwar/Documents/templates/hackquarantine/TravelBand/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import'./drum.css';import MIDISounds from'midi-sounds-react';import KeyboardEventHandler from'react-keyboard-event-handler';import{socket}from'./index';function home(){window.location.reload();}var Drum=/*#__PURE__*/function(_Component){_inherits(Drum,_Component);var _super=_createSuper(Drum);function Drum(){var _this;_classCallCheck(this,Drum);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={recordStatus:false,recordTune:{beatPlayed:[],timePlayed:[]}};_this.selectedDrum=[];return _this;}_createClass(Drum,[{key:\"playBeat\",//play beat of selected drum component\nvalue:function playBeat(selectedDrum){this.midiSounds.playDrumsNow([selectedDrum]);if(this.state.recordStatus){this.state.recordTune.beatPlayed.push(selectedDrum);this.state.recordTune.timePlayed.push(new Date());console.log(this.state.recordTune);}}//send keys from drum to server\n},{key:\"sendKeysFromDrums\",value:function sendKeysFromDrums(key){socket.emit('sendFromDrums',key);}//handles keyboard input to play beat when corresponding key is pressed\n},{key:\"playDrum\",value:function playDrum(key){switch(key){case'f'://Cymbal\nthis.playBeat(110);this.sendKeysFromDrums([110]);break;case'g'://Low Tom\nthis.playBeat(40);this.sendKeysFromDrums([40]);break;case't'://Mid Tom\nthis.playBeat(60);this.sendKeysFromDrums([60]);break;case'b'://Bass Drum\nthis.playBeat(5);this.sendKeysFromDrums([5]);break;case'y'://High Tom\nthis.playBeat(75);this.sendKeysFromDrums([75]);break;case'h'://Snare Drum\nthis.playBeat(15);this.sendKeysFromDrums([15]);break;case'j'://Hi-Hat\nthis.playBeat(35);this.sendKeysFromDrums([35]);break;}}//flip record status from recording to not recording and vice versa\n},{key:\"toggleRecordStatus\",value:function toggleRecordStatus(){this.state.recordStatus=!this.state.recordStatus;if(this.state.recordStatus){document.getElementById('record-btn').innerHTML='Stop';}else{document.getElementById('record-btn').innerHTML='Record';document.getElementById('play-btn').disabled=false;}}//asynchronous function that plays the recorded beats at an interval of 1 second each\n},{key:\"wait\",value:function(){var _wait=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(ms){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:return _context.abrupt(\"return\",new Promise(function(resolve){setTimeout(resolve,ms);}));case 1:case\"end\":return _context.stop();}}},_callee);}));function wait(_x){return _wait.apply(this,arguments);}return wait;}()},{key:\"playRecord\",value:function(){var _playRecord=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var i;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:console.log('playing');i=0;case 2:if(!(i<this.state.recordTune.beatPlayed.length)){_context2.next=11;break;}_context2.next=5;return this.playBeat(this.state.recordTune.beatPlayed[i]);case 5:console.log(i);_context2.next=8;return this.wait(this.state.recordTune.timePlayed[i+1]-this.state.recordTune.timePlayed[i]);case 8:i++;_context2.next=2;break;case 11:case\"end\":return _context2.stop();}}},_callee2,this);}));function playRecord(){return _playRecord.apply(this,arguments);}return playRecord;}()//delete the previously recorded beats to start recording again from scratch\n},{key:\"resetRecord\",value:function resetRecord(){this.setState({recordTune:{beatPlayed:[],timePlayed:[]}});}// leaveRoom() {\n//   socket.leave(\"room-\"+roomno)\n// }\n},{key:\"render\",value:function render(){var _this2=this;//send guitar chords played\nsocket.on('receiveFromGuitar',function(selectedNote){_this2.midiSounds.playChordNow(258,selectedNote,1.5);});//send piano played\nsocket.on('receiveFromPiano',function(sound){_this2.midiSounds.playChordNow(3,sound.note,sound.length);});//send drum played from other users\nsocket.on('receiveFromDrums',function(key){_this2.midiSounds.playDrumsNow(key);});return/*#__PURE__*/React.createElement(\"div\",{className:\"Drum\"},/*#__PURE__*/React.createElement(KeyboardEventHandler,{handleKeys:['all'],onKeyEvent:function onKeyEvent(key,e){return _this2.playDrum(key);}}),/*#__PURE__*/React.createElement(\"header\",{id:\"main-header\"},/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},/*#__PURE__*/React.createElement(\"h1\",{contentEditable:true},\"Travel Ban\",/*#__PURE__*/React.createElement(\"span\",{style:{color:'#9a0415'}},\"d\")))),/*#__PURE__*/React.createElement(\"nav\",{id:\"navbar\"},/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},/*#__PURE__*/React.createElement(\"ul\",null,/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(\"a\",{onClick:home},\"Home\")),/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(\"a\",{id:\"record-btn\",onClick:this.toggleRecordStatus.bind(this)},\"Record\")),/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(\"a\",{id:\"play-btn\",onClick:this.playRecord.bind(this)},\"Play\")),/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(\"a\",{onClick:this.resetRecord.bind(this)},\"Reset\"))))),/*#__PURE__*/React.createElement(\"p\",null,\"Click play only after you stop recording!#issue needs to be fixed-->disable playbutton while in recording mode\"),/*#__PURE__*/React.createElement(\"div\",{className:\"relative\"},/*#__PURE__*/React.createElement(\"img\",{src:\"assets/images/drum_kit.png\"})),/*#__PURE__*/React.createElement(\"p\",null,\"Hit Refresh to change instrument\"),/*#__PURE__*/React.createElement(MIDISounds,{ref:function ref(_ref){return _this2.midiSounds=_ref;},appElementName:\"root\",instruments:[258,3]}));}}]);return Drum;}(Component);export default Drum;","map":{"version":3,"sources":["/Users/deeptanshusankhwar/Documents/templates/hackquarantine/TravelBand/client/src/drum.js"],"names":["React","Component","MIDISounds","KeyboardEventHandler","socket","home","window","location","reload","Drum","state","recordStatus","recordTune","beatPlayed","timePlayed","selectedDrum","midiSounds","playDrumsNow","push","Date","console","log","key","emit","playBeat","sendKeysFromDrums","document","getElementById","innerHTML","disabled","ms","Promise","resolve","setTimeout","i","length","wait","setState","on","selectedNote","playChordNow","sound","note","e","playDrum","color","toggleRecordStatus","bind","playRecord","resetRecord","ref"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './drum.css';\nimport MIDISounds from 'midi-sounds-react';\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\nimport {socket} from './index';\n\n\n\nfunction home(){\n  window.location.reload();\n}\n\n\nclass Drum extends Component {\n\n  //to track the status of recording\n  state = {\n    recordStatus: false,\n    recordTune: {\n      beatPlayed : [],\n      timePlayed : []\n    },\n  }\n\n  selectedDrum = [];\n\n  //play beat of selected drum component\n  playBeat(selectedDrum) {\n    this.midiSounds.playDrumsNow([selectedDrum]);\n\n    if (this.state.recordStatus)  {\n      this.state.recordTune.beatPlayed.push(selectedDrum);\n      this.state.recordTune.timePlayed.push(new Date())\n      console.log(this.state.recordTune);\n    }\n  }\n\n  //send keys from drum to server\n  sendKeysFromDrums(key)  {\n    socket.emit('sendFromDrums', key);\n  }\n\n  //handles keyboard input to play beat when corresponding key is pressed\n  playDrum(key) {\n\n    switch(key) {\n      case 'f': //Cymbal\n        this.playBeat(110);\n        this.sendKeysFromDrums([110]);\n        break;\n\n      case 'g': //Low Tom\n        this.playBeat(40);\n        this.sendKeysFromDrums([40]);\n        break;\n\n      case 't': //Mid Tom\n        this.playBeat(60);\n        this.sendKeysFromDrums([60]);\n        break;\n\n      case 'b': //Bass Drum\n        this.playBeat(5);\n        this.sendKeysFromDrums([5]);\n        break;\n\n      case 'y': //High Tom\n        this.playBeat(75);\n        this.sendKeysFromDrums([75]);\n        break;\n\n      case 'h': //Snare Drum\n        this.playBeat(15);\n        this.sendKeysFromDrums([15]);\n        break;\n\n      case 'j': //Hi-Hat\n        this.playBeat(35);\n        this.sendKeysFromDrums([35]);\n        break;\n    }\n  }\n\n  //flip record status from recording to not recording and vice versa\n  toggleRecordStatus()  {\n    this.state.recordStatus = !this.state.recordStatus;\n\n    if (this.state.recordStatus) {\n      document.getElementById('record-btn').innerHTML = 'Stop';\n    }\n    else{\n      document.getElementById('record-btn').innerHTML = 'Record';\n      document.getElementById('play-btn').disabled = false;\n    }\n  }\n\n  //asynchronous function that plays the recorded beats at an interval of 1 second each\n  async wait(ms) {\n    return new Promise(resolve => {\n      setTimeout(resolve, ms);\n    });\n  }\n  async playRecord()  {\n    console.log('playing')\n    for (let i = 0; i < this.state.recordTune.beatPlayed.length; i++)  {\n      await this.playBeat(this.state.recordTune.beatPlayed[i]);\n      console.log(i);\n      await this.wait(this.state.recordTune.timePlayed[i+1] - this.state.recordTune.timePlayed[i]);\n    }\n  }\n\n  //delete the previously recorded beats to start recording again from scratch\n  resetRecord() {\n    this.setState({ recordTune: {\n        beatPlayed: [],\n        timePlayed: []\n      }\n    });\n  }\n\n  // leaveRoom() {\n  //   socket.leave(\"room-\"+roomno)\n  // }\n\n  render()  {\n    //send guitar chords played\n    socket.on('receiveFromGuitar', (selectedNote) => {\n      this.midiSounds.playChordNow(258, selectedNote, 1.5);\n    });\n\n    //send piano played\n    socket.on('receiveFromPiano', (sound) => {\n      this.midiSounds.playChordNow(3, sound.note, sound.length);\n    });\n\n    //send drum played from other users\n    socket.on('receiveFromDrums', (key) => {\n        this.midiSounds.playDrumsNow(key);\n    });\n\n    return (\n      <div className=\"Drum\">\n        <KeyboardEventHandler handleKeys={['all']} onKeyEvent={(key, e) => this.playDrum(key)} />\n        <header id = 'main-header'>\n          <div className=\"container\">\n            <h1 contentEditable>Travel Ban<span style={{color: '#9a0415'}}>d</span></h1>\n          </div>\n        </header>\n        <nav id=\"navbar\">\n          <div className=\"container\">\n            <ul>\n              <li><a onClick={home}>Home</a></li>\n              <li><a id=\"record-btn\" onClick={this.toggleRecordStatus.bind(this)}>Record</a></li>\n              <li><a id=\"play-btn\" onClick={this.playRecord.bind(this)}>Play</a></li>\n              <li><a onClick={this.resetRecord.bind(this)}>Reset</a></li>\n              {/* <li><a onClick={this.leaveRoom.bind(this)}>LeaveRoom</a></li> */}\n            </ul>\n          </div>\n        </nav>\n        <p>Click play only after you stop recording!#issue needs to be fixed-->disable playbutton while in recording mode</p>\n\n        <div className='relative'>\n         <img src = \"assets/images/drum_kit.png\"></img>\n        </div>\n\n        <p>Hit Refresh to change instrument</p>\n\n        <MIDISounds ref={(ref) => (this.midiSounds = ref)} appElementName=\"root\" instruments={[258, 3]} />\n      </div>\n    );\n  }\n}\n\nexport default Drum;\n"]},"metadata":{},"sourceType":"module"}